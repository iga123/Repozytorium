#include<stdio.h>
#include <stdlib.h>

int** createMatrix(int n);
void fillMatrix(int** tab,int n);
void copyMatrix(int*** dest,int** src,int n);
void deleteMatrix(int*** ptab,int n);

int main(void)
{
      int n,i,j,**tab,**tab2;
      printf("Podaj rozmiar tablicy: ");
      scanf("%d",&n);
    if(n<0)
      {
          printf("Podany rozmiar musi byc dodatni!");
          return -1;
      }
      tab=createMatrix(n);
      if(tab == NULL)
          return -1;
      fillMatrix(tab,n);
      tab2 = createMatrix(n);
    if(tab2 == NULL)
       return -1;
    
    copyMatrix(&tab2, tab, n);
    for(i=0; i<n; i++){
        for(j=0; j<n; j++)
            printf("%3d ", tab2[i][j]);
        putchar('\n');
    }
    deleteMatrix(&tab, n);
    deleteMatrix(&tab2, n);
    return 0;
}

int** createMatrix(int n)
{
  int i, **tab;
  tab=(int**)malloc(n * sizeof(*tab));
  if(tab==NULL)
    return NULL;
    for(i=0;i<n;i++){
        tab[i]=(int*)malloc(n * sizeof(tab));
        if(tab==NULL){
            deleteMatrix(&tab, i);
            return NULL;
        }
    }
    return tab;
}

void fillMatrix(int** tab,int n)
{
  int i,j,x=0;
  for(i=0;i<n;i++)
    for(j=0;j<n;j++)
      tab[i][j]=++x;
      return ;
}

 void copyMatrix(int*** dest,int** src, int n)
 {
     int i,j;
    *dest = createMatrix(n);
    if(*dest == NULL)
        return;
    for(i=0; i<n; i++)
        for(j=0; j<n; j++)
            (*dest)[i][j]=src[i][j];
    return;
}
   
  void deleteMatrix(int*** ptab, int n){
    int i;
    for(i=0; i<n; i++)
        free((*ptab)[i]);
    free(*ptab);
    return;
}
  